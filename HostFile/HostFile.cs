using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using HostLists.Entities;

namespace HostFile
{
  public class HostFile
  {
    public static string GetCurrentHostFile()
    {
      // Mocked up for now

      string hostsFileLocation = Path.Combine(System.Environment.GetFolderPath(System.Environment.SpecialFolder.System), "drivers\\etc\\hosts");

      return
@"# Copyright (c) 1993-2009 Microsoft Corp.
#
# This is a sample HOSTS file used by Microsoft TCP/IP for Windows.
#
# This file contains the mappings of IP addresses to host names. Each
# entry should be kept on an individual line. The IP address should
# be placed in the first column followed by the corresponding host name.
# The IP address and the host name should be separated by at least one
# space.
#
# Additionally, comments (such as these) may be inserted on individual
# lines or following the machine name denoted by a '#' symbol.
#
# For example:
#
#      102.54.94.97     rhino.acme.com          # source server
#       38.25.63.10     x.acme.com              # x client host

# localhost name resolution is handled within DNS itself.
127.0.0.1       localhost
#	::1             localhost

192.168.17.100	mydevbox.local
";
    }

    public static string BuildHostFileFromHostList(List<HostEntry> hostList)
    {
      // Mocked up for now
      return
@"#Hosts file generated by hostman
1.2.3.4    some.other_site.com
1.2.3.4    some.other_site.com
1.2.3.4    some.other_site.com
1.2.3.4    some.other_site.com
1.2.3.4    some.other_site.com
1.2.3.4    some.other_site.com
1.2.3.4    some.other_site.com
";
    }

    public static bool SaveHostFileAsCurrent(string hostFile)
    {
      // Mocked up for now, return true for success, false for failiure
      return true;
    }

  }
}
